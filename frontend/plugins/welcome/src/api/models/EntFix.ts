/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API Playlist Vidoe
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntFixEdges,
    EntFixEdgesFromJSON,
    EntFixEdgesFromJSONTyped,
    EntFixEdgesToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntFix
 */
export interface EntFix {
    /**
     * Date holds the value of the "date" field.
     * @type {string}
     * @memberof EntFix
     */
    date?: string;
    /**
     * 
     * @type {EntFixEdges}
     * @memberof EntFix
     */
    edges?: EntFixEdges;
    /**
     * ID of the ent.
     * @type {number}
     * @memberof EntFix
     */
    id?: number;
    /**
     * Problemtype holds the value of the "problemtype" field.
     * @type {string}
     * @memberof EntFix
     */
    problemtype?: string;
    /**
     * Productnumber holds the value of the "productnumber" field.
     * @type {string}
     * @memberof EntFix
     */
    productnumber?: string;
    /**
     * Queue holds the value of the "queue" field.
     * @type {string}
     * @memberof EntFix
     */
    queue?: string;
}

export function EntFixFromJSON(json: any): EntFix {
    return EntFixFromJSONTyped(json, false);
}

export function EntFixFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntFix {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'date': !exists(json, 'date') ? undefined : json['date'],
        'edges': !exists(json, 'edges') ? undefined : EntFixEdgesFromJSON(json['edges']),
        'id': !exists(json, 'id') ? undefined : json['id'],
        'problemtype': !exists(json, 'Problemtype') ? undefined : json['Problemtype'],
        'productnumber': !exists(json, 'Productnumber') ? undefined : json['Productnumber'],
        'queue': !exists(json, 'Queue') ? undefined : json['Queue'],
    };
}

export function EntFixToJSON(value?: EntFix | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'date': value.date,
        'edges': EntFixEdgesToJSON(value.edges),
        'id': value.id,
        'problemtype': value.problemtype,
        'productnumber': value.productnumber,
        'queue': value.queue,
    };
}


