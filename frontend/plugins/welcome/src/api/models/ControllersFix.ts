/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API Playlist Vidoe
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ControllersFix
 */
export interface ControllersFix {
    /**
     * 
     * @type {number}
     * @memberof ControllersFix
     */
    customer?: number;
    /**
     * 
     * @type {string}
     * @memberof ControllersFix
     */
    date?: string;
    /**
     * 
     * @type {number}
     * @memberof ControllersFix
     */
    fixbrand?: number;
    /**
     * 
     * @type {number}
     * @memberof ControllersFix
     */
    fixcomtype?: number;
    /**
     * 
     * @type {number}
     * @memberof ControllersFix
     */
    personal?: number;
    /**
     * 
     * @type {string}
     * @memberof ControllersFix
     */
    problemtype?: string;
    /**
     * 
     * @type {string}
     * @memberof ControllersFix
     */
    productnumber?: string;
    /**
     * 
     * @type {string}
     * @memberof ControllersFix
     */
    queue?: string;
}

export function ControllersFixFromJSON(json: any): ControllersFix {
    return ControllersFixFromJSONTyped(json, false);
}

export function ControllersFixFromJSONTyped(json: any, ignoreDiscriminator: boolean): ControllersFix {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'customer': !exists(json, 'customer') ? undefined : json['customer'],
        'date': !exists(json, 'date') ? undefined : json['date'],
        'fixbrand': !exists(json, 'fixbrand') ? undefined : json['fixbrand'],
        'fixcomtype': !exists(json, 'fixcomtype') ? undefined : json['fixcomtype'],
        'personal': !exists(json, 'personal') ? undefined : json['personal'],
        'problemtype': !exists(json, 'problemtype') ? undefined : json['problemtype'],
        'productnumber': !exists(json, 'productnumber') ? undefined : json['productnumber'],
        'queue': !exists(json, 'queue') ? undefined : json['queue'],
    };
}

export function ControllersFixToJSON(value?: ControllersFix | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'customer': value.customer,
        'date': value.date,
        'fixbrand': value.fixbrand,
        'fixcomtype': value.fixcomtype,
        'personal': value.personal,
        'problemtype': value.problemtype,
        'productnumber': value.productnumber,
        'queue': value.queue,
    };
}


